knitr::opts_chunk$set(echo = TRUE)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = ex1file.csv, headers = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url = fileURL, destfile = "./ex1file.csv")
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
#download.file(url = fileURL, destfile = "./ex1file.csv")
ex1data <- read.csv("ex1file.csv")
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
#download.file(url = fileURL, destfile = "./ex1file.csv")
#ex1data <- read.csv("ex1file.csv")
head(ex1data)
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
#download.file(url = fileURL, destfile = "./ex1file.csv")
#ex1data <- read.csv("ex1file.csv")
head(ex1data)
summary(ex1data$VAL)
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
#download.file(url = fileURL, destfile = "./ex1file.csv")
#ex1data <- read.csv("ex1file.csv")
head(ex1data)
table(ex1data$VAL)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url = fileURL, destfile = "./ex3file.xlsx")
library(xlsx)
ex3data <- read.xlsx("./ex3file.xlsx", sheetIndex=1, header = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url = fileURL, destfile = "./ex3file.xlsx")
#library(xlsx)
ex3data <- read.xlsx("./ex3file.xlsx", sheetIndex=1, header = TRUE)
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
#download.file(url = fileURL, destfile = "./ex3file2.xlsx")
#library(xlsx)
ex3data <- read.xlsx("ex3file2.xlsx", sheetIndex=1, header = TRUE)
head(ex3data)
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
#download.file(url = fileURL, destfile = "./ex3file2.xlsx")
#library(xlsx)
colIndex <- 7:15
rowIndex <- 18:23
ex3datasub <- read.xlsx("ex3file2.xlsx", sheetIndex=1, header = TRUE, colIndex = colIndex, rowIndex = rowIndex)
#head(ex3data)
sum(ex3datasub$Zip*ex3datasub$Ext,na.rm=T)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#library(XML)
ex4data <- xmlTreeParse(fileURL, useInternet = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#library(XML)
ex4data <- xmlTreeParse(fileURL, useInternat = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#library(XML)
ex4data <- xmlTreeParse(fileURL, useInternalNodes = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
#library(XML)
ex4data <- xmlTreeParse(fileURL, useInternal = TRUE)
library(data.table)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url = fileURL, destfile = "./ex5file.csv")
ex5data <- read.csv("ex1file.csv")
system.time(fread(ex5data))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(ex5data <- fread("ex1file.csv"))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv"))
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
#system.time(DT <- fread("ex1file.csv"))
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
#system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
print("---- DT[,mean(pwgtp15),by=SEX] ----")
system.time(DT[,mean(pwgtp15),by=SEX])
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv"))
head(DT)
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv"))
head(DT)
colnames(DT)
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv", sep = ","))
head(DT)
colnames(DT)
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv", sep = ",", header = TRUE))
head(DT)
colnames(DT)
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
#fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
#download.file(url = fileURL, destfile = "./ex5file.csv")
system.time(DT <- fread("ex1file.csv", sep = ",", header = TRUE, quote = ""))
head(DT)
colnames(DT)
print("---- sapply(split(DT$pwgtp15,DT$SEX),mean) ----")
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
install.packages("RMySQL")
library(RMySQL)
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
results <- dbGetQuery(ucscDb, "show databeses;"); dbDisconnect(ucscDb);
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
result
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
head(result) # lista de data bases diponiveis
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
head(result) # lista de data bases diponiveis
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
head(result) # lista de data bases diponiveis
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
dbDisconnect(hg19)
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
head(result) # lista de data bases diponiveis
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19) # lista de tabelas da DB hg19
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2") # nome das colunas da tabela
dbGetQuery(hg19, "select count(*) from affyU133Plus2") # numero de linhas
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
dbDisconnect(hg19)
#library(RMySQL)
ucscDb <- dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
head(result) # lista de data bases diponiveis
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19", host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19) # lista de tabelas da DB hg19
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2") # nome das colunas da tabela
dbGetQuery(hg19, "select count(*) from affyU133Plus2") # numero de linhas
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10); dbClearResult(query);
dim(affyMisSmall)
dbDisconnect(hg19)
knitr::opts_chunk$set(echo = TRUE)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(outcome[, 11])
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AL"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- with( dataoutcome, (state == [,7]) )
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AL"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- dataoutcome[,7] = state
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AL"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- dataoutcome[,7] == state
head(filtro)
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
}
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AL"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- dataoutcome[,7] == state
head(filtro)
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
#}
The function
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AK"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- dataoutcome[,7] == state
head(filtro)
## Read outcome data
## Check that state and outcome are valid
## Return hospital name in that state with lowest 30-day death
## rate
#}
dataoutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(dataoutcome)
ncol(dataoutcome)
dataoutcome[, 11] <- as.numeric(dataoutcome[, 11])
## You may get a warning about NAs being introduced; that is okay
hist(dataoutcome[, 11])
#best <- function(state, woutcome) {
state <- "AK"
woutcome <- "heart attack"
validstates <- c("AL","AK","AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY")
validoutcomes <- c("heart attack", "heart failure", "pneumonia")
#checkValid(state, validstates)
#checkValid(woutcome, validoutcomes)
filtro <- dataoutcome[,7] == state
head(filtro)
filtered <- dataoutcome[filtro]
bioclite
BiocManager::install("rhdf5")
install.packages("httr")
install.packages("foreign")
